modules:
  arrays:
    name: arrays
    functions:
    - token: APPEND
      file_name: arrays/append.go
      line_number: 15
      doc:
        desc: APPEND appends a new item to an array and returns a new array with a
          given element. If ``uniqueOnly`` is set to true, then will add the item
          only if it's unique.
        params:
        - name: arr
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        - name: item
          type:
          - Any
          desc: Target value to add.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: New array.
    - token: FIRST
      file_name: arrays/first.go
      line_number: 13
      doc:
        desc: FIRST returns a first element from a given array.
        params:
        - name: arr
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any
          desc: First element in a given array.
    - token: FLATTEN
      file_name: arrays/flatten.go
      line_number: 18
      doc:
        desc: FLATTEN turns an array of arrays into a flat array. All array elements
          in array will be expanded in the result array. Non-array elements are added
          as they are. The function will recurse into sub-arrays up to the specified
          depth. Duplicates will not be removed.
        params:
        - name: arr
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        - name: depth
          type:
          - Int
          desc: Depth level.
          optional: true
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Flat array.
    - token: INTERSECTION
      file_name: arrays/intersection.go
      line_number: 15
      doc:
        desc: INTERSECTION return the intersection of all arrays specified. The result
          is an array of values that occur in all arguments. The element order is
          random. Duplicates are removed.
        params:
        - name: arrays
          type:
          - Any[], repeated
          desc: An arbitrary number of arrays as multiple arguments (at least 2).
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: A single array with only the elements, which exist in all provided
            arrays.
    - token: LAST
      file_name: arrays/last.go
      line_number: 13
      doc:
        desc: LAST returns the last element of an array.
        params:
        - name: array
          type:
          - Any[]
          desc: The target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any
          desc: Last element of an array.
    - token: MINUS
      file_name: arrays/minus.go
      line_number: 14
      doc:
        desc: MINUS return the difference of all arrays specified. The order of the
          result array is undefined and should not be relied on. Duplicates will be
          removed.
        params:
        - name: arrays
          type:
          - Any[], repeated
          desc: An arbitrary number of arrays as multiple arguments (at least 2).
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: An array of values that occur in the first array, but not in any of
            the subsequent arrays.
    - token: NTH
      file_name: arrays/nth.go
      line_number: 16
      doc:
        desc: NTH returns the element of an array at a given position. It is the same
          as anyArray[position] for positive positions, but does not support negative
          positions. If position is negative or beyond the upper bound of the array,
          then NONE will be returned.
        params:
        - name: array
          type:
          - Any[]
          desc: An array with elements of arbitrary type.
          optional: false
          default_value:
        - name: index
          type:
          - Int
          desc: Position of desired element in array, positions start at 0.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any
          desc: The array element at the given position.
    - token: OUTERSECTION
      file_name: arrays/outersection.go
      line_number: 12
      doc:
        desc: OUTERSECTION return the values that occur only once across all arrays
          specified. The element order is random.
        params:
        - name: arrays
          type:
          - Any[], repeated
          desc: An arbitrary number of arrays as multiple arguments (at least 2).
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: A single array with only the elements that exist only once across
            all provided arrays.
    - token: POP
      file_name: arrays/pop.go
      line_number: 13
      doc:
        desc: POP returns a new array without last element.
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Copy of an array without last element.
    - token: POSITION
      file_name: arrays/position.go
      line_number: 15
      doc:
        desc: POSITION returns a value indicating whether an element is contained
          in array. Optionally returns its position.
        params:
        - name: array
          type:
          - Any[]
          desc: The source array.
          optional: false
          default_value:
        - name: value
          type:
          - Any
          desc: The target value.
          optional: false
          default_value:
        - name: position
          type:
          - Boolean
          desc: Boolean value which indicates whether to return item's position.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Boolean
          - Int
          desc: A value indicating whether an element is contained in array.
    - token: PUSH
      file_name: arrays/push.go
      line_number: 15
      doc:
        desc: PUSH create a new array with appended value.
        params:
        - name: array
          type:
          - Any[]
          desc: Source array.
          optional: false
          default_value:
        - name: value
          type:
          - Any
          desc: Target value.
          optional: false
          default_value:
        - name: unique
          type:
          - Boolean
          desc: Read indicating whether to do uniqueness check.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Any[]
          desc: A new array with appended value.
    - token: REMOVE_NTH
      file_name: arrays/remove_nth.go
      line_number: 14
      doc:
        desc: REMOVE_NTH returns a new array without an element by a given position.
        params:
        - name: array
          type:
          - Any[]
          desc: Source array.
          optional: false
          default_value:
        - name: position
          type:
          - Int
          desc: Target element position.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: A new array without an element by a given position.
    - token: REMOVE_VALUE
      file_name: arrays/remove_value.go
      line_number: 16
      doc:
        desc: REMOVE_VALUE returns a new array with removed all occurrences of value
          in a given array. Optionally with a limit to the number of removals.
        params:
        - name: array
          type:
          - Any[]
          desc: Source array.
          optional: false
          default_value:
        - name: value
          type:
          - Any
          desc: Target value.
          optional: false
          default_value:
        - name: limit
          type:
          - Int
          desc: A limit to the number of removals.
          optional: true
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: A new array with removed all occurrences of value in a given array.
    - token: REMOVE_VALUES
      file_name: arrays/remove_values.go
      line_number: 14
      doc:
        desc: REMOVE_VALUES returns a new array with removed all occurrences of values
          in a given array.
        params:
        - name: array
          type:
          - Any[]
          desc: Source array.
          optional: false
          default_value:
        - name: values
          type:
          - Any[]
          desc: Target values.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: A new array with removed all occurrences of values in a given array.
    - token: SHIFT
      file_name: arrays/shift.go
      line_number: 13
      doc:
        desc: SHIFT returns a new array without the first element.
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Copy of an array without the first element.
    - token: SLICE
      file_name: arrays/slice.go
      line_number: 15
      doc:
        desc: SLICE returns a new sliced array.
        params:
        - name: array
          type:
          - Any[]
          desc: Source array.
          optional: false
          default_value:
        - name: start
          type:
          - Int
          desc: Start position of extraction.
          optional: false
          default_value:
        - name: length
          type:
          - Int
          desc: Read indicating how many elements to extract.
          optional: true
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Sliced array.
    - token: SORTED
      file_name: arrays/sorted.go
      line_number: 14
      doc:
        desc: SORTED sorts all elements in anyArray. The function will use the default
          comparison order for FQL value types.
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Sorted array.
    - token: SORTED_UNIQUE
      file_name: arrays/sorted_unique.go
      line_number: 15
      doc:
        desc: SORTED_UNIQUE sorts all elements in anyArray. The function will use
          the default comparison order for FQL value types. Additionally, the values
          in the result array will be made unique
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Sorted array.
    - token: UNION
      file_name: arrays/union.go
      line_number: 13
      doc:
        desc: UNION returns the union of all passed arrays.
        params:
        - name: arrays
          type:
          - Any[], repeated
          desc: List of arrays to combine.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: All array elements combined in a single array, in any order.
    - token: UNION_DISTINCT
      file_name: arrays/union_distinct.go
      line_number: 13
      doc:
        desc: UNION_DISTINCT returns the union of all passed arrays with unique values.
        params:
        - name: arrays
          type:
          - Any[], repeated
          desc: List of arrays to combine.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: All unique array elements combined in a single array, in any order.
    - token: UNIQUE
      file_name: arrays/unique.go
      line_number: 13
      doc:
        desc: UNIQUE returns all unique elements from a given array.
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: New array without duplicates.
    - token: UNSHIFT
      file_name: arrays/unshift.go
      line_number: 15
      doc:
        desc: UNSHIFT prepends value to a given array.
        params:
        - name: array
          type:
          - Any[]
          desc: Target array.
          optional: false
          default_value:
        - name: value
          type:
          - Any
          desc: Target value to prepend.
          optional: false
          default_value:
        - name: unique
          type:
          - Boolean
          desc: Optional value indicating whether a value must be unique to be prepended.
            default is false.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Any[]
          desc: New array with prepended value.
  collections:
    name: collections
    functions:
    - token: INCLUDES
      file_name: collections/include.go
      line_number: 14
      doc:
        desc: INCLUDES checks whether a container includes a given value.
        params:
        - name: haystack
          type:
          - String
          - Any[]
          - Object
          - Iterable
          desc: The value container.
          optional: false
          default_value:
        - name: needle
          type:
          - Any
          desc: The target value to assert.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: A boolean value that indicates whether a container contains a given
            value.
    - token: LENGTH
      file_name: collections/length.go
      line_number: 14
      doc:
        desc: LENGTH returns the length of a measurable value.
        params:
        - name: value
          type:
          - Measurable
          desc: The value to measure.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The length of the value.
    - token: REVERSE
      file_name: collections/reverse.go
      line_number: 13
      doc:
        desc: REVERSE returns the reverse of a given string or array value.
        params:
        - name: value
          type:
          - String
          - Any[]
          desc: The string or array to reverse.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          - Any[]
          desc: A reversed version of a given value.
  datetime:
    name: datetime
    functions:
    - token: DATE
      file_name: datetime/date.go
      line_number: 14
      doc:
        desc: DATE converts RFC3339 date time string to DateTime object.
        params:
        - name: time
          type:
          - String
          desc: String in rfc3339 format.
          optional: false
          default_value:
        returns:
          name:
          type:
          - DateTime
          desc: New datetime object derived from timestring.
    - token: DATE_ADD
      file_name: datetime/add_subtract.go
      line_number: 30
      doc:
        desc: 'DATE_ADD adds amount given in unit to date. The following units are
          available: * y, year, year * m, month, months * w, week, weeks * d, day,
          days * h, hour, hours * i, minute, minutes * s, second, seconds * f, millisecond,
          milliseconds'
        params:
        - name: date
          type:
          - DateTime
          desc: Source date.
          optional: false
          default_value:
        - name: amount
          type:
          - Int
          desc: Amount of units
          optional: false
          default_value:
        - name: unit
          type:
          - String
          desc: Unit.
          optional: false
          default_value:
        returns:
          name:
          type:
          - DateTime
          desc: Calculated date.
    - token: DATE_COMPARE
      file_name: datetime/compare.go
      line_number: 17
      doc:
        desc: DATE_COMPARE checks if two partial dates match.
        params:
        - name: date1
          type:
          - DateTime
          desc: First date.
          optional: false
          default_value:
        - name: date2
          type:
          - DateTime
          desc: Second date.
          optional: false
          default_value:
        - name: unitRangeStart
          type:
          - String
          desc: Unit to start from.
          optional: false
          default_value:
        - name: unitRangeEnd
          type:
          - String
          desc: Unit to end with. error will be returned if unitrangestart unit less
            that unitrangeend.
          optional: true
          default_value: '"millisecond"'
        returns:
          name:
          type:
          - Boolean
          desc: True if the dates match, else false.
    - token: DATE_DAY
      file_name: datetime/day.go
      line_number: 13
      doc:
        desc: DATE_DAY returns the day of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A day number.
    - token: DATE_DAYOFWEEK
      file_name: datetime/dayofweek.go
      line_number: 13
      doc:
        desc: DATE_DAYOFWEEK returns number of the weekday from the date. Sunday is
          the 0th day of week.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: Number of the weekday.
    - token: DATE_DAYOFYEAR
      file_name: datetime/dayofyear.go
      line_number: 14
      doc:
        desc: DATE_DAYOFYEAR returns the day of year number of date. The return value
          range from 1 to 365 (366 in a leap year).
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A day of year number.
    - token: DATE_DAYS_IN_MONTH
      file_name: datetime/daysinmonth.go
      line_number: 29
      doc:
        desc: DATE_DAYS_IN_MONTH returns the number of days in the month of date.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: Number of the days.
    - token: DATE_DIFF
      file_name: datetime/diff.go
      line_number: 16
      doc:
        desc: DATE_DIFF returns the difference between two dates in given time unit.
        params:
        - name: date1
          type:
          - DateTime
          desc: First date.
          optional: false
          default_value:
        - name: date2
          type:
          - DateTime
          desc: Second date.
          optional: false
          default_value:
        - name: unit
          type:
          - String
          desc: Time unit to return the difference in.
          optional: false
          default_value:
        - name: asFloat
          type:
          - Boolean
          desc: If true amount of unit will be as float.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Int
          - Float
          desc: Difference between date1 and date2.
    - token: DATE_FORMAT
      file_name: datetime/format.go
      line_number: 13
      doc:
        desc: DATE_FORMAT format date according to the given format string.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime object.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Formatted date.
    - token: DATE_HOUR
      file_name: datetime/hour.go
      line_number: 13
      doc:
        desc: DATE_HOUR returns the hour of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: An hour number.
    - token: DATE_LEAPYEAR
      file_name: datetime/leapyear.go
      line_number: 13
      doc:
        desc: DATE_LEAPYEAR returns true if date is in a leap year else false.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Date is in a leap year.
    - token: DATE_MILLISECOND
      file_name: datetime/millisecond.go
      line_number: 13
      doc:
        desc: DATE_MILLISECOND returns the millisecond of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A millisecond number.
    - token: DATE_MINUTE
      file_name: datetime/minute.go
      line_number: 13
      doc:
        desc: DATE_MINUTE returns the minute of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A minute number.
    - token: DATE_MONTH
      file_name: datetime/month.go
      line_number: 13
      doc:
        desc: DATE_MONTH returns the month of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A month number.
    - token: DATE_QUARTER
      file_name: datetime/quarter.go
      line_number: 14
      doc:
        desc: DATE_QUARTER returns which quarter date belongs to.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A quarter number.
    - token: DATE_SECOND
      file_name: datetime/second.go
      line_number: 13
      doc:
        desc: DATE_SECOND returns the second of date as a number.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A second number.
    - token: DATE_SUBTRACT
      file_name: datetime/add_subtract.go
      line_number: 60
      doc:
        desc: 'DATE_SUBTRACT subtract amount given in unit to date. The following
          units are available: * y, year, year * m, month, months * w, week, weeks
          * d, day, days * h, hour, hours * i, minute, minutes * s, second, seconds
          * f, millisecond, milliseconds'
        params:
        - name: date
          type:
          - DateTime
          desc: Source date.
          optional: false
          default_value:
        - name: amount
          type:
          - Int
          desc: Amount of units
          optional: false
          default_value:
        - name: unit
          type:
          - String
          desc: Unit.
          optional: false
          default_value:
        returns:
          name:
          type:
          - DateTime
          desc: Calculated date.
    - token: DATE_YEAR
      file_name: datetime/year.go
      line_number: 13
      doc:
        desc: DATE_YEAR returns the year extracted from the given date.
        params:
        - name: date
          type:
          - DateTime
          desc: Source datetime.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A year number.
    - token: NOW
      file_name: datetime/now.go
      line_number: 12
      doc:
        desc: NOW returns new DateTime object with Time equal to time.Now().
        params: []
        returns:
          name:
          type:
          - DateTime
          desc: New datetime object.
  html:
    name: html
    functions:
    - token: ATTR_GET
      file_name: html/attr_get.go
      line_number: 14
      doc:
        desc: ATTR_GET gets single or more attribute(s) of a given element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target node.
          optional: false
          default_value:
        - name: attrNames
          type:
          - String, repeated
          desc: Attribute name(s).
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: Key-value pairs of attribute values.
    - token: ATTR_REMOVE
      file_name: html/attr_remove.go
      line_number: 14
      doc:
        desc: ATTR_REMOVE removes single or more attribute(s) of a given element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target node.
          optional: false
          default_value:
        - name: attrNames
          type:
          - String, repeated
          desc: Attribute name(s).
          optional: false
          default_value:
        returns:
    - token: ATTR_SET
      file_name: html/attr_set.go
      line_number: 15
      doc:
        desc: ATTR_SET sets or updates a single or more attribute(s) of a given element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target node.
          optional: false
          default_value:
        - name: nameOrObj - Attribute name or an object representing a key
          type:
          - String
          - Object
          desc: Value pair of attributes.
          optional: false
          default_value:
        - name: value
          type:
          - String
          desc: If a second parameter is a string value, this parameter represent
            an attribute value.
          optional: false
          default_value:
        returns:
    - token: BLUR
      file_name: html/blur.go
      line_number: 13
      doc:
        desc: BLUR Calls blur on the element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: true
          default_value:
        returns:
    - token: CLICK
      file_name: html/click.go
      line_number: 15
      doc:
        desc: CLICK dispatches click event on a given element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: cssSelectorOrClicks
          type:
          - String
          - Int
          desc: Css selector or count of clicks.
          optional: true
          default_value:
        - name: clicks
          type:
          - Int
          desc: Count of clicks.
          optional: true
          default_value: '1'
        returns:
    - token: CLICK_ALL
      file_name: html/click_all.go
      line_number: 16
      doc:
        desc: CLICK_ALL dispatches click event on all matched element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: false
          default_value:
        - name: clicks
          type:
          - Int
          desc: Optional count of clicks.
          optional: true
          default_value: '1'
        returns:
          name:
          type:
          - Boolean
          desc: True if matched at least one element.
    - token: COOKIE_DEL
      file_name: html/cookie_del.go
      line_number: 14
      doc:
        desc: COOKIE_DEL gets a cookie from a given page by name.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: cookiesOrNames
          type:
          - HTTPCookie, repeated
          - String, repeated
          desc: Cookie or cookie name to delete.
          optional: false
          default_value:
        returns:
    - token: COOKIE_GET
      file_name: html/cookie_get.go
      line_number: 15
      doc:
        desc: COOKIE_GET gets a cookie from a given page by name.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: name
          type:
          - String
          desc: Cookie or cookie name to delete.
          optional: false
          default_value:
        returns:
          name:
          type:
          - HTTPCookie
          desc: Cookie if found, otherwise none.
    - token: COOKIE_SET
      file_name: html/cookie_set.go
      line_number: 13
      doc:
        desc: COOKIE_SET sets cookies to a given page
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: cookies
          type:
          - HTTPCookie, repeated
          desc: Target cookies.
          optional: false
          default_value:
        returns:
    - token: DOCUMENT
      file_name: html/document.go
      line_number: 36
      doc:
        desc: DOCUMENT opens an HTML page by a given url. By default, loads a page
          by http call - resulted page does not support any interactions.
        params:
        - name: params
          type:
          - Object
          desc: 'An object containing the following properties :'
          optional: true
          default_value:
        - name: params.driver
          type:
          - String
          desc: Driver name to use.
          optional: true
          default_value:
        - name: params.timeout
          type:
          - Int
          desc: Page load timeout.
          optional: true
          default_value: '60000'
        - name: params.userAgent
          type:
          - String
          desc: Custom user agent.
          optional: true
          default_value:
        - name: params.keepCookies
          type:
          - Boolean
          desc: Boolean value indicating whether to use cookies from previous sessions
            i.e. not to open a page in the incognito mode.
          optional: true
          default_value: 'False'
        - name: params.cookies
          type:
          - HTTPCookies
          desc: Set of http cookies to use during page loading.
          optional: true
          default_value:
        - name: params.headers
          type:
          - HTTPHeaders
          desc: Set of http headers to use during page loading.
          optional: true
          default_value:
        - name: params.viewport
          type:
          - Object
          desc: Viewport params.
          optional: true
          default_value:
        - name: params.viewport.height
          type:
          - Int
          desc: Viewport height.
          optional: true
          default_value:
        - name: params.viewport.width
          type:
          - Int
          desc: Viewport width.
          optional: true
          default_value:
        - name: params.viewport.scaleFactor
          type:
          - Float
          desc: Viewport scale factor.
          optional: true
          default_value:
        - name: params.viewport.mobile
          type:
          - Boolean
          desc: Value that indicates whether to emulate mobile device.
          optional: true
          default_value:
        - name: params.viewport.landscape
          type:
          - Boolean
          desc: Value that indicates whether to render a page in landscape position.
          optional: true
          default_value:
        returns:
          name:
          type:
          - HTMLPage
          desc: Loaded html page.
    - token: DOWNLOAD
      file_name: html/download.go
      line_number: 15
      doc:
        desc: DOWNLOAD downloads a resource from the given GetURL.
        params:
        - name: url
          type:
          - String
          desc: Url to download.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: A base64 encoded string in binary format.
    - token: ELEMENT
      file_name: html/element.go
      line_number: 16
      doc:
        desc: ELEMENT finds an element by a given CSS selector. Returns NONE if element
          not found.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - HTMLElement
          desc: A matched html element
    - token: ELEMENTS
      file_name: html/elements.go
      line_number: 14
      doc:
        desc: ELEMENTS finds HTML elements by a given CSS selector. Returns an empty
          array if element not found.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - HTMLElement[]
          desc: An array of matched html elements.
    - token: ELEMENTS_COUNT
      file_name: html/elements_count.go
      line_number: 14
      doc:
        desc: ELEMENTS_COUNT returns a number of found HTML elements by a given CSS
          selector. Returns an empty array if element not found.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: A number of matched html elements by a given css selector.
    - token: ELEMENT_EXISTS
      file_name: html/element_exists.go
      line_number: 13
      doc:
        desc: ELEMENT_EXISTS returns a boolean value indicating whether there is an
          element matched by selector.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: A boolean value indicating whether there is an element matched by
            selector.
    - token: FOCUS
      file_name: html/focus.go
      line_number: 13
      doc:
        desc: FOCUS Sets focus on the element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: true
          default_value:
        returns:
    - token: FRAMES
      file_name: html/find_frames.go
      line_number: 15
      doc:
        desc: FRAMES finds HTML frames by a given property selector. Returns an empty
          array if frames not found.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Html page.
          optional: false
          default_value:
        - name: property
          type:
          - String
          desc: Property selector.
          optional: false
          default_value:
        - name: value
          type:
          - Any
          desc: Property value.
          optional: false
          default_value:
        returns:
          name:
          type:
          - HTMLDocument[]
          desc: Returns an array of found html frames.
    - token: HOVER
      file_name: html/hover.go
      line_number: 15
      doc:
        desc: HOVER fetches an element with selector, scrolls it into view if needed,
          and then uses page.mouse to hover over the center of the element. If there's
          no element matching selector, the method returns an error.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: If document is passed, this param must represent an element selector.
          optional: true
          default_value:
        returns:
    - token: INNER_HTML
      file_name: html/get_inner_html.go
      line_number: 15
      doc:
        desc: INNER_HTML returns inner HTML string of a given or matched by CSS selector
          element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: true
          default_value:
        returns:
          name:
          type:
          - String
          desc: Inner html string if a matched element, otherwise empty string.
    - token: INNER_HTML_ALL
      file_name: html/get_inner_html_all.go
      line_number: 15
      doc:
        desc: INNER_HTML_ALL returns an array of inner HTML strings of matched elements.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String[]
          desc: An array of inner html strings if all matched elements, otherwise
            empty array.
    - token: INNER_HTML_SET
      file_name: html/set_inner_html.go
      line_number: 15
      doc:
        desc: INNER_HTML_SET sets inner HTML string to a given or matched by CSS selector
          element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: htmlOrSelector
          type:
          - String
          desc: Html or css selector.
          optional: false
          default_value:
        - name: html
          type:
          - String
          desc: String of inner html.
          optional: true
          default_value:
        returns:
    - token: INNER_TEXT
      file_name: html/get_inner_text.go
      line_number: 15
      doc:
        desc: INNER_TEXT returns inner text string of a given or matched by CSS selector
          element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: true
          default_value:
        returns:
          name:
          type:
          - String
          desc: Inner text if a matched element, otherwise empty string.
    - token: INNER_TEXT_ALL
      file_name: html/get_inner_text_all.go
      line_number: 15
      doc:
        desc: INNER_TEXT_ALL returns an array of inner text of matched elements.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String[]
          desc: An array of inner text if all matched elements, otherwise empty array.
    - token: INNER_TEXT_SET
      file_name: html/set_inner_text.go
      line_number: 15
      doc:
        desc: INNER_TEXT_SET sets inner text string to a given or matched by CSS selector
          element
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: textOrCssSelector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        - name: text
          type:
          - String
          desc: String of inner text.
          optional: true
          default_value:
        returns:
    - token: INPUT
      file_name: html/input.go
      line_number: 16
      doc:
        desc: INPUT types a value to an underlying input element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: valueOrSelector
          type:
          - String
          desc: Css selector or a value.
          optional: false
          default_value:
        - name: value
          type:
          - String
          desc: Target value.
          optional: false
          default_value:
        - name: delay
          type:
          - Int
          desc: Target value.
          optional: true
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if an element was found.
    - token: INPUT_CLEAR
      file_name: html/clear.go
      line_number: 13
      doc:
        desc: INPUT_CLEAR clears a value from an underlying input element.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector.
          optional: true
          default_value:
        returns:
    - token: MOUSE
      file_name: html/mouse_xy.go
      line_number: 15
      doc:
        desc: MOUSE moves mouse by given coordinates.
        params:
        - name: document
          type:
          - HTMLDocument
          desc: Html document.
          optional: false
          default_value:
        - name: x
          type:
          - Int
          - Float
          desc: X coordinate.
          optional: false
          default_value:
        - name: y
          type:
          - Int
          - Float
          desc: Y coordinate.
          optional: false
          default_value:
        returns:
    - token: NAVIGATE
      file_name: html/navigate.go
      line_number: 17
      doc:
        desc: NAVIGATE navigates a given page to a new resource. The operation blocks
          the execution until the page gets loaded. Which means there is no need in
          WAIT_NAVIGATION function.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: url
          type:
          - String
          desc: Target url to navigate.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Navigation timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: NAVIGATE_BACK
      file_name: html/navigate_back.go
      line_number: 18
      doc:
        desc: NAVIGATE_BACK navigates a given page back within its navigation history.
          The operation blocks the execution until the page gets loaded. If the history
          is empty, the function returns FALSE.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: entry
          type:
          - Int
          desc: An integer value indicating how many pages to skip.
          optional: true
          default_value: '1'
        - name: timeout
          type:
          - Int
          desc: Navigation timeout.
          optional: true
          default_value: '5000'
        returns:
          name:
          type:
          - Boolean
          desc: True if history exists and the operation succeeded, otherwise false.
    - token: NAVIGATE_FORWARD
      file_name: html/navigate_forward.go
      line_number: 18
      doc:
        desc: NAVIGATE_FORWARD navigates a given page forward within its navigation
          history. The operation blocks the execution until the page gets loaded.
          If the history is empty, the function returns FALSE.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: entry
          type:
          - Int
          desc: An integer value indicating how many pages to skip.
          optional: true
          default_value: '1'
        - name: timeout
          type:
          - Int
          desc: Navigation timeout.
          optional: true
          default_value: '5000'
        returns:
          name:
          type:
          - Boolean
          desc: True if history exists and the operation succeeded, otherwise false.
    - token: PAGINATION
      file_name: html/pagination.go
      line_number: 16
      doc:
        desc: PAGINATION creates an iterator that goes through pages using CSS selector.
          The iterator starts from the current page i.e. it does not change the page
          on 1st iteration. That allows you to keep scraping logic inside FOR loop.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Css selector for a pagination on the page.
          optional: false
          default_value:
        returns:
    - token: PARSE
      file_name: html/parse.go
      line_number: 31
      doc:
        desc: PARSE loads an HTML page from a given string or byte array
        params:
        - name: html
          type:
          - String
          desc: Html string to parse.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: 'An object containing the following properties:'
          optional: true
          default_value:
        - name: params.driver
          type:
          - String
          desc: Name of a driver to parse with.
          optional: true
          default_value:
        - name: params.keepCookies
          type:
          - Boolean
          desc: Boolean value indicating whether to use cookies from previous sessions
            i.e. not to open a page in the incognito mode.
          optional: true
          default_value: 'False'
        - name: params.cookies
          type:
          - HTTPCookies
          desc: Set of http cookies to use during page loading.
          optional: true
          default_value:
        - name: params.headers
          type:
          - HTTPHeaders
          desc: Set of http headers to use during page loading.
          optional: true
          default_value:
        - name: params.viewport
          type:
          - Object
          desc: Viewport params.
          optional: true
          default_value:
        - name: params.viewport.height
          type:
          - Int
          desc: Viewport height.
          optional: true
          default_value:
        - name: params.viewport.width
          type:
          - Int
          desc: Viewport width.
          optional: true
          default_value:
        - name: params.viewport.scaleFactor
          type:
          - Float
          desc: Viewport scale factor.
          optional: true
          default_value:
        - name: params.viewport.mobile
          type:
          - Boolean
          desc: Value that indicates whether to emulate mobile device.
          optional: true
          default_value:
        - name: params.viewport.landscape
          type:
          - Boolean
          desc: Value that indicates whether to render a page in landscape position.
          optional: true
          default_value:
        returns:
          name:
          type:
          - HTMLPage
          desc: Returns parsed and loaded html page.
    - token: PDF
      file_name: html/pdf.go
      line_number: 42
      doc:
        desc: PDF prints a PDF of the current page.
        params:
        - name: target
          type:
          - HTMLPage
          - String
          desc: Target page or url.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: 'An object containing the following properties:'
          optional: true
          default_value:
        - name: params.landscape
          type:
          - Bool
          desc: Paper orientation.
          optional: true
          default_value: 'False'
        - name: params.displayHeaderFooter
          type:
          - Bool
          desc: Display header and footer.
          optional: true
          default_value: 'False'
        - name: params.printBackground
          type:
          - Bool
          desc: Print background graphics.
          optional: true
          default_value: 'False'
        - name: params.scale
          type:
          - Float
          desc: Scale of the webpage rendering.
          optional: true
          default_value: '1'
        - name: params.paperWidth
          type:
          - Float
          desc: Paper width in inches.
          optional: true
          default_value: '22'
        - name: params.paperHeight
          type:
          - Float
          desc: Paper height in inches.
          optional: true
          default_value: '28'
        - name: params.marginTo
          type:
          - Float
          desc: Top margin in inches.
          optional: true
          default_value: '1'
        - name: params.marginBottom
          type:
          - Float
          desc: Bottom margin in inches.
          optional: true
          default_value: '1'
        - name: params.marginLeft
          type:
          - Float
          desc: Left margin in inches.
          optional: true
          default_value: '1'
        - name: params.marginRight
          type:
          - Float
          desc: Right margin in inches.
          optional: true
          default_value: '1'
        - name: params.pageRanges
          type:
          - String
          desc: 13'.
          optional: true
          default_value:
        - name: params.ignoreInvalidPageRanges
          type:
          - Bool
          desc: 2'.
          optional: true
          default_value: 'False'
        - name: params.headerTemplate
          type:
          - String
          desc: '`totalpages`: total pages in the document for example, `<span class=title></span>`
            would generate span containing the title.'
          optional: true
          default_value:
        - name: params.footerTemplate
          type:
          - String
          desc: Html template for the print footer. should use the same format as
            the `headertemplate`.
          optional: true
          default_value:
        - name: params.preferCSSPageSize
          type:
          - Bool
          desc: Whether or not to prefer page size as defined by css. defaults to
            false, in which case the content will be scaled to fit the paper size.
            *
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Binary
          desc: Pdf document in binary format.
    - token: SCREENSHOT
      file_name: html/screenshot.go
      line_number: 22
      doc:
        desc: SCREENSHOT takes a screenshot of a given page.
        params:
        - name: target
          type:
          - HTMLPage
          - String
          desc: Target page or url.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: 'An object containing the following properties :'
          optional: true
          default_value:
        - name: params.x
          type:
          - Float
          - Int
          desc: X position of the viewport.
          optional: true
          default_value: '0'
        - name: params.y
          type:
          - Float
          - Int
          desc: Y position of the viewport.
          optional: true
          default_value: '0'
        - name: params.width
          type:
          - Float
          - Int
          desc: Width of the viewport.
          optional: true
          default_value:
        - name: params.height
          type:
          - Float
          - Int
          desc: Height of the viewport.
          optional: true
          default_value:
        - name: params.format
          type:
          - String
          desc: Either "jpeg" or "png".
          optional: true
          default_value: '"jpeg"'
        - name: params.quality
          type:
          - Int
          desc: Quality, in [0, 100], only for jpeg format.
          optional: true
          default_value: '100'
        returns:
          name:
          type:
          - Binary
          desc: Screenshot in binary format.
    - token: SCROLL
      file_name: html/scroll_xy.go
      line_number: 19
      doc:
        desc: SCROLL scrolls by given coordinates.
        params:
        - name: document
          type:
          - HTMLDocument
          desc: Html document.
          optional: false
          default_value:
        - name: x
          type:
          - Int
          - Float
          desc: X coordinate.
          optional: false
          default_value:
        - name: y
          type:
          - Int
          - Float
          desc: Y coordinate.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: Scroll params.
          optional: true
          default_value:
        - name: params.behavior
          type:
          - String
          desc: Scroll behavior
          optional: true
          default_value: '"instant"'
        - name: params.block
          type:
          - String
          desc: Scroll vertical alignment.
          optional: true
          default_value: '"center"'
        - name: params.inline
          type:
          - String
          desc: Scroll horizontal alignment.
          optional: true
          default_value: '"center"'
        returns:
    - token: SCROLL_BOTTOM
      file_name: html/scroll_bottom.go
      line_number: 18
      doc:
        desc: SCROLL_BOTTOM scrolls the document's window to its bottom.
        params:
        - name: document
          type:
          - HTMLDocument
          desc: Html document.
          optional: false
          default_value:
        - name: x
          type:
          - Int
          - Float
          desc: X coordinate.
          optional: false
          default_value:
        - name: y
          type:
          - Int
          - Float
          desc: Y coordinate.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: Scroll params.
          optional: true
          default_value:
        - name: params.behavior
          type:
          - String
          desc: Scroll behavior
          optional: true
          default_value: '"instant"'
        - name: params.block
          type:
          - String
          desc: Scroll vertical alignment.
          optional: true
          default_value: '"center"'
        - name: params.inline
          type:
          - String
          desc: Scroll horizontal alignment.
          optional: true
          default_value: '"center"'
        returns:
    - token: SCROLL_ELEMENT
      file_name: html/scroll_element.go
      line_number: 20
      doc:
        desc: SCROLL_ELEMENT scrolls an element on.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: If document is passed, this param must represent an element selector.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: Scroll params.
          optional: true
          default_value:
        - name: params.behavior
          type:
          - String
          desc: Scroll behavior
          optional: true
          default_value: '"instant"'
        - name: params.block
          type:
          - String
          desc: Scroll vertical alignment.
          optional: true
          default_value: '"center"'
        - name: params.inline
          type:
          - String
          desc: Scroll horizontal alignment.
          optional: true
          default_value: '"center"'
        returns:
    - token: SCROLL_TOP
      file_name: html/scroll_top.go
      line_number: 18
      doc:
        desc: SCROLL_TOP scrolls the document's window to its top.
        params:
        - name: document
          type:
          - HTMLDocument
          desc: Html document.
          optional: false
          default_value:
        - name: x
          type:
          - Int
          - Float
          desc: X coordinate.
          optional: false
          default_value:
        - name: y
          type:
          - Int
          - Float
          desc: Y coordinate.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: Scroll params.
          optional: true
          default_value:
        - name: params.behavior
          type:
          - String
          desc: Scroll behavior
          optional: true
          default_value: '"instant"'
        - name: params.block
          type:
          - String
          desc: Scroll vertical alignment.
          optional: true
          default_value: '"center"'
        - name: params.inline
          type:
          - String
          desc: Scroll horizontal alignment.
          optional: true
          default_value: '"center"'
        returns:
    - token: SELECT
      file_name: html/select.go
      line_number: 15
      doc:
        desc: SELECT selects a value from an underlying select element.
        params:
        - name: element
          type:
          - HTMLElement
          desc: Target html element.
          optional: false
          default_value:
        - name: valueOrSelector
          type:
          - String
          - String[]
          desc: Selector or a an array of strings as a value.
          optional: false
          default_value:
        - name: value
          type:
          - String[]
          desc: Target value. optional.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String[]
          desc: Array of selected values.
    - token: STYLE_GET
      file_name: html/style_get.go
      line_number: 14
      doc:
        desc: STYLE_GET gets single or more style attribute value(s) of a given element.
        params:
        - name: element
          type:
          - HTMLElement
          desc: Target html element.
          optional: false
          default_value:
        - name: names
          type:
          - String, repeated
          desc: Style name(s).
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: Collection of key-value pairs of style values.
    - token: STYLE_REMOVE
      file_name: html/style_remove.go
      line_number: 14
      doc:
        desc: STYLE_REMOVE removes single or more style attribute value(s) of a given
          element.
        params:
        - name: element
          type:
          - HTMLElement
          desc: Target html element.
          optional: false
          default_value:
        - name: names
          type:
          - String, repeated
          desc: Style name(s).
          optional: false
          default_value:
        returns:
    - token: STYLE_SET
      file_name: html/style_set.go
      line_number: 15
      doc:
        desc: STYLE_SET sets or updates a single or more style attribute value of
          a given element.
        params:
        - name: element
          type:
          - HTMLElement
          desc: Target html element.
          optional: false
          default_value:
        - name: nameOrObj - Style name or an object representing a key
          type:
          - String
          - Object
          desc: Value pair of attributes.
          optional: false
          default_value:
        - name: value
          type:
          - String
          desc: If a second parameter is a string value, this parameter represent
            a style value.
          optional: false
          default_value:
        returns:
    - token: WAIT_ATTR
      file_name: html/wait_attr.go
      line_number: 17
      doc:
        desc: WAIT_ATTR waits until a target attribute's value appears
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: attrNameOrSelector
          type:
          - String
          desc: String of an attr name or css selector.
          optional: false
          default_value:
        - name: attrValueOrAttrName
          type:
          - String
          - Any
          desc: Attr value or name.
          optional: false
          default_value:
        - name: attrValueOrTimeout
          type:
          - Any
          - Int
          desc: Attr value or a timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_ATTR_ALL
      file_name: html/wait_attr_all.go
      line_number: 17
      doc:
        desc: WAIT_ATTR_ALL waits for an attribute to appear on all matched elements
          with a given value. Stops the execution until the navigation ends or operation
          times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        - name: class
          type:
          - String
          desc: String of target css class.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_CLASS
      file_name: html/wait_class.go
      line_number: 17
      doc:
        desc: WAIT_CLASS waits for a class to appear on a given element. Stops the
          execution until the navigation ends or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selectorOrClass
          type:
          - String
          desc: If document is passed, this param must represent an element selector.
            otherwise target class.
          optional: false
          default_value:
        - name: classOrTimeout
          type:
          - String
          - Int
          desc: If document is passed, this param must represent target class name.
            otherwise timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: If document is passed, this param must represent timeout. otherwise
            not passed.
          optional: true
          default_value:
        returns:
    - token: WAIT_CLASS_ALL
      file_name: html/wait_class_all.go
      line_number: 17
      doc:
        desc: WAIT_CLASS_ALL waits for a class to appear on all matched elements.
          Stops the execution until the navigation ends or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        - name: class
          type:
          - String
          desc: String of target css class.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_ELEMENT
      file_name: html/wait_element.go
      line_number: 16
      doc:
        desc: WAIT_ELEMENT waits for element to appear in the DOM. Stops the execution
          until it finds an element or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Target element's selector.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NAVIGATION
      file_name: html/wait_navigation.go
      line_number: 26
      doc:
        desc: WAIT_NAVIGATION waits for a given page to navigate to a new url. Stops
          the execution until the navigation ends or operation times out.
        params:
        - name: page
          type:
          - HTMLPage
          desc: Target page.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Navigation timeout.
          optional: true
          default_value: '5000'
        - name: params
          type:
          - Object
          desc: Navigation parameters.
          optional: true
          default_value: None
        - name: params.timeout
          type:
          - Int
          desc: Navigation timeout.
          optional: true
          default_value: '5000'
        - name: params.target
          type:
          - Int
          desc: Navigation target url.
          optional: true
          default_value:
        - name: params.frame
          type:
          - HTMLDocument
          desc: Navigation frame.
          optional: true
          default_value:
        returns:
    - token: WAIT_NO_ATTR
      file_name: html/wait_attr.go
      line_number: 27
      doc:
        desc: WAIT_NO_ATTR waits until a target attribute's value disappears
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: attrNameOrSelector
          type:
          - String
          desc: String of an attr name or css selector.
          optional: false
          default_value:
        - name: attrValueOrAttrName
          type:
          - String
          - Any
          desc: Attr value or name.
          optional: false
          default_value:
        - name: attrValueOrTimeout
          type:
          - Any
          - Int
          desc: Attr value or wait timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NO_ATTR_ALL
      file_name: html/wait_attr_all.go
      line_number: 27
      doc:
        desc: WAIT_NO_ATTR_ALL waits for an attribute to disappear on all matched
          elements by a given value. Stops the execution until the navigation ends
          or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        - name: class
          type:
          - String
          desc: String of target css class.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NO_CLASS
      file_name: html/wait_class.go
      line_number: 27
      doc:
        desc: WAIT_NO_CLASS waits for a class to disappear on a given element. Stops
          the execution until the navigation ends or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selectorOrClass
          type:
          - String
          desc: If document is passed, this param must represent an element selector.
            otherwise target class.
          optional: false
          default_value:
        - name: classOrTimeout
          type:
          - String
          - Int
          desc: If document is passed, this param must represent target class name.
            otherwise timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: If document is passed, this param must represent timeout. otherwise
            not passed.
          optional: true
          default_value:
        returns:
    - token: WAIT_NO_CLASS_ALL
      file_name: html/wait_class_all.go
      line_number: 27
      doc:
        desc: WAIT_NO_CLASS_ALL waits for a class to disappear on all matched elements.
          Stops the execution until the navigation ends or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: String of css selector.
          optional: false
          default_value:
        - name: class
          type:
          - String
          desc: String of target css class.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NO_ELEMENT
      file_name: html/wait_element.go
      line_number: 25
      doc:
        desc: WAIT_NO_ELEMENT waits for element to disappear in the DOM. Stops the
          execution until it does not find an element or operation times out.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: selector
          type:
          - String
          desc: Target element's selector.
          optional: false
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NO_STYLE
      file_name: html/wait_style.go
      line_number: 27
      doc:
        desc: WAIT_NO_STYLE waits until a target style value disappears
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: styleNameOrSelector
          type:
          - String
          desc: Style name or css selector.
          optional: false
          default_value:
        - name: valueOrStyleName
          type:
          - String
          - Any
          desc: Style value or name.
          optional: false
          default_value:
        - name: valueOrTimeout
          type:
          - Any
          - Int
          desc: Style value or wait timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_NO_STYLE_ALL
      file_name: html/wait_style_all.go
      line_number: 27
      doc:
        desc: WAIT_NO_STYLE_ALL waits until a target style value disappears on all
          matched elements with a given value.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: styleNameOrSelector
          type:
          - String
          desc: Style name or css selector.
          optional: false
          default_value:
        - name: valueOrStyleName
          type:
          - String
          - Any
          desc: Style value or name.
          optional: false
          default_value:
        - name: valueOrTimeout
          type:
          - Any
          - Int
          desc: Style value or wait timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_STYLE
      file_name: html/wait_style.go
      line_number: 17
      doc:
        desc: WAIT_STYLE waits until a target style value appears
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: styleNameOrSelector
          type:
          - String
          desc: Style name or css selector.
          optional: false
          default_value:
        - name: valueOrStyleName
          type:
          - String
          - Any
          desc: Style value or name.
          optional: false
          default_value:
        - name: valueOrTimeout
          type:
          - Any
          - Int
          desc: Style value or wait timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Wait timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: WAIT_STYLE_ALL
      file_name: html/wait_style_all.go
      line_number: 17
      doc:
        desc: WAIT_STYLE_ALL waits until a target style value appears on all matched
          elements with a given value.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: styleNameOrSelector
          type:
          - String
          desc: Style name or css selector.
          optional: false
          default_value:
        - name: valueOrStyleName
          type:
          - String
          - Any
          desc: Style value or name.
          optional: false
          default_value:
        - name: valueOrTimeout
          type:
          - Any
          - Int
          desc: Style value or wait timeout.
          optional: true
          default_value:
        - name: timeout
          type:
          - Int
          desc: Timeout.
          optional: true
          default_value: '5000'
        returns:
    - token: XPATH
      file_name: html/xpath.go
      line_number: 14
      doc:
        desc: XPATH evaluates the XPath expression.
        params:
        - name: node
          type:
          - HTMLPage
          - HTMLDocument
          - HTMLElement
          desc: Target html node.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: Xpath expression.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any
          desc: Returns result of a given xpath expression.
  io/fs:
    name: io/fs
    functions:
    - token: READ
      file_name: io/fs/read.go
      line_number: 14
      doc:
        desc: READ reads from a given file.
        params:
        - name: path
          type:
          - String
          desc: Path to file to read from.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: File content in binary format.
    - token: WRITE
      file_name: io/fs/write.go
      line_number: 20
      doc:
        desc: WRITE writes the given data into the file.
        params:
        - name: path
          type:
          - String
          desc: File path to write into.
          optional: false
          default_value:
        - name: data
          type:
          - Binary
          desc: Data to write.
          optional: false
          default_value:
        - name: params
          type:
          - Object
          desc: 'Additional parameters:'
          optional: true
          default_value:
        - name: params.mode
          type:
          - String
          desc: 'Write (default): will create a file if the specified file does not
            exist'
          optional: true
          default_value:
        returns:
  io/net/http:
    name: io/net/http
    functions:
    - token: DELETE
      file_name: io/net/http/delete.go
      line_number: 15
      doc:
        desc: DELETE makes a HTTP DELETE request.
        params:
        - name: params
          type:
          - Object
          desc: Request parameters.
          optional: false
          default_value:
        - name: params.url
          type:
          - String
          desc: Target url
          optional: false
          default_value:
        - name: params.body
          type:
          - Binary
          desc: Request data
          optional: false
          default_value:
        - name: params.headers
          type:
          - Object
          desc: Http headers
          optional: true
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: Response in binary format
    - token: DO
      file_name: io/net/http/request.go
      line_number: 27
      doc:
        desc: REQUEST makes a HTTP request.
        params:
        - name: params
          type:
          - Object
          desc: Request parameters.
          optional: false
          default_value:
        - name: params.method
          type:
          - String
          desc: Http method
          optional: false
          default_value:
        - name: params.url
          type:
          - String
          desc: Target url
          optional: false
          default_value:
        - name: params.body
          type:
          - Binary
          desc: Request data
          optional: false
          default_value:
        - name: params.headers
          type:
          - Object
          desc: Http headers
          optional: true
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: Response in binary format
    - token: GET
      file_name: io/net/http/get.go
      line_number: 16
      doc:
        desc: GET makes a HTTP GET request.
        params:
        - name: urlOrParam
          type:
          - Object
          - String
          desc: Target url or parameters.
          optional: false
          default_value:
        - name: param.url
          type:
          - String
          desc: Target url or parameters.
          optional: true
          default_value:
        - name: param.headers
          type:
          - Object
          desc: Http headers
          optional: true
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: Response in binary format
    - token: POST
      file_name: io/net/http/post.go
      line_number: 15
      doc:
        desc: POST makes a POST request.
        params:
        - name: params
          type:
          - Object
          desc: Request parameters.
          optional: false
          default_value:
        - name: params.url
          type:
          - String
          desc: Target url
          optional: false
          default_value:
        - name: params.body
          type:
          - Binary
          desc: Request data
          optional: false
          default_value:
        - name: params.headers
          type:
          - Object
          desc: Http headers
          optional: true
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: Response in binary format
    - token: PUT
      file_name: io/net/http/put.go
      line_number: 15
      doc:
        desc: PUT makes a PUT HTTP request.
        params:
        - name: params
          type:
          - Object
          desc: Request parameters.
          optional: false
          default_value:
        - name: params.url
          type:
          - String
          desc: Target url
          optional: false
          default_value:
        - name: params.body
          type:
          - Binary
          desc: Request data
          optional: false
          default_value:
        - name: params.headers
          type:
          - Object
          desc: Http headers
          optional: true
          default_value:
        returns:
          name:
          type:
          - Binary
          desc: Response in binary format
  math:
    name: math
    functions:
    - token: ABS
      file_name: math/abs.go
      line_number: 14
      doc:
        desc: ABS returns the absolute value of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The absolute value of a given number.
    - token: ACOS
      file_name: math/acos.go
      line_number: 14
      doc:
        desc: ACOS returns the arccosine, in radians, of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The arccosine, in radians, of a given number.
    - token: ASIN
      file_name: math/asin.go
      line_number: 14
      doc:
        desc: ASIN returns the arcsine, in radians, of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The arcsine, in radians, of a given number.
    - token: ATAN
      file_name: math/atan.go
      line_number: 14
      doc:
        desc: ATAN returns the arctangent, in radians, of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The arctangent, in radians, of a given number.
    - token: ATAN2
      file_name: math/atan2.go
      line_number: 15
      doc:
        desc: ATAN2 returns the arc tangent of y/x, using the signs of the two to
          determine the quadrant of the return value.
        params:
        - name: number1
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        - name: number2
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The arc tangent of y/x, using the signs of the two to determine the
            quadrant of the return value.
    - token: AVERAGE
      file_name: math/average.go
      line_number: 13
      doc:
        desc: AVERAGE Returns the average (arithmetic mean) of the values in array.
        params:
        - name: array
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The average of the values in array.
    - token: CEIL
      file_name: math/ceil.go
      line_number: 14
      doc:
        desc: CEIL returns the least integer value greater than or equal to a given
          value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The least integer value greater than or equal to a given value.
    - token: COS
      file_name: math/cos.go
      line_number: 14
      doc:
        desc: COS returns the cosine of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The cosine of a given number.
    - token: DEGREES
      file_name: math/degrees.go
      line_number: 13
      doc:
        desc: DEGREES returns the angle converted from radians to degrees.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: The input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The angle in degrees
    - token: EXP
      file_name: math/exp.go
      line_number: 14
      doc:
        desc: EXP returns Euler's constant (2.71828...) raised to the power of value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: Euler's constant raised to the power of value.
    - token: EXP2
      file_name: math/exp2.go
      line_number: 14
      doc:
        desc: EXP2 returns 2 raised to the power of value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: 2 raised to the power of value.
    - token: FLOOR
      file_name: math/floor.go
      line_number: 14
      doc:
        desc: FLOOR returns the greatest integer value less than or equal to a given
          value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The greatest integer value less than or equal to a given value.
    - token: LOG
      file_name: math/log.go
      line_number: 14
      doc:
        desc: LOG returns the natural logarithm of a given value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The natural logarithm of a given value.
    - token: LOG10
      file_name: math/log10.go
      line_number: 14
      doc:
        desc: LOG10 returns the decimal logarithm of a given value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The decimal logarithm of a given value.
    - token: LOG2
      file_name: math/log2.go
      line_number: 14
      doc:
        desc: LOG2 returns the binary logarithm of a given value.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The binary logarithm of a given value.
    - token: MAX
      file_name: math/max.go
      line_number: 13
      doc:
        desc: MAX returns the greatest (arithmetic mean) of the values in array.
        params:
        - name: array
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The greatest of the values in array.
    - token: MEDIAN
      file_name: math/median.go
      line_number: 14
      doc:
        desc: MEDIAN returns the median of the values in array.
        params:
        - name: array
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The median of the values in array.
    - token: MIN
      file_name: math/min.go
      line_number: 13
      doc:
        desc: MIN returns the smallest (arithmetic mean) of the values in array.
        params:
        - name: array
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The smallest of the values in array.
    - token: PERCENTILE
      file_name: math/percentile.go
      line_number: 17
      doc:
        desc: PERCENTILE returns the nth percentile of the values in a given array.
        params:
        - name: array
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        - name: number
          type:
          - Int
          desc: A number which must be between 0 (excluded) and 100 (included).
          optional: false
          default_value:
        - name: method
          type:
          - String
          desc: '"rank" or "interpolation".'
          optional: true
          default_value: '"rank"'
        returns:
          name:
          type:
          - Float
          desc: The nth percentile, or null if the array is empty or only null values
            are contained in it or the percentile cannot be calculated.
    - token: PI
      file_name: math/pi.go
      line_number: 12
      doc:
        desc: PI returns Pi value.
        params: []
        returns:
          name:
          type:
          - Float
          desc: Pi value.
    - token: POW
      file_name: math/pow.go
      line_number: 15
      doc:
        desc: POW returns the base to the exponent value.
        params:
        - name: base
          type:
          - Int
          - Float
          desc: The base value.
          optional: false
          default_value:
        - name: exp
          type:
          - Int
          - Float
          desc: The exponent value.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The exponentiated value.
    - token: RADIANS
      file_name: math/radians.go
      line_number: 13
      doc:
        desc: RADIANS returns the angle converted from degrees to radians.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: The input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The angle in radians.
    - token: RAND
      file_name: math/rand.go
      line_number: 15
      doc:
        desc: RAND return a pseudo-random number between 0 and 1.
        params:
        - name: max
          type:
          - Int
          - Float
          desc: Upper limit.
          optional: true
          default_value:
        - name: min
          type:
          - Int
          - Float
          desc: Lower limit.
          optional: true
          default_value:
        returns:
          name:
          type:
          - Float
          desc: A number greater than 0 and less than 1.
    - token: RANGE
      file_name: math/range.go
      line_number: 15
      doc:
        desc: RANGE returns an array of numbers in the specified range, optionally
          with increments other than 1.
        params:
        - name: start
          type:
          - Int
          - Float
          desc: The value to start the range at (inclusive).
          optional: false
          default_value:
        - name: end
          type:
          - Int
          - Float
          desc: The value to end the range with (inclusive).
          optional: false
          default_value:
        - name: step
          type:
          - Int
          - Float
          desc: How much to increment in every step.
          optional: true
          default_value: '1.0'
        returns:
          name:
          type:
          - Int[]
          - Float[]
          desc: Array of numbers in the specified range, optionally with increments
            other than 1.
    - token: ROUND
      file_name: math/round.go
      line_number: 14
      doc:
        desc: ROUND returns the nearest integer, rounding half away from zero.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The nearest integer, rounding half away from zero.
    - token: SIN
      file_name: math/sin.go
      line_number: 14
      doc:
        desc: SIN returns the sine of the radian argument.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: Input number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The sin, in radians, of a given number.
    - token: SQRT
      file_name: math/sqrt.go
      line_number: 14
      doc:
        desc: SQRT returns the square root of a given number.
        params:
        - name: value
          type:
          - Int
          - Float
          desc: A number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The square root.
    - token: STDDEV_POPULATION
      file_name: math/stddev_population.go
      line_number: 14
      doc:
        desc: STDDEV_POPULATION returns the population standard deviation of the values
          in a given array.
        params:
        - name: numbers
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The population standard deviation.
    - token: STDDEV_SAMPLE
      file_name: math/stddev_sample.go
      line_number: 14
      doc:
        desc: STDDEV_SAMPLE returns the sample standard deviation of the values in
          a given array.
        params:
        - name: numbers
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The sample standard deviation.
    - token: SUM
      file_name: math/sum.go
      line_number: 13
      doc:
        desc: SUM returns the sum of the values in a given array.
        params:
        - name: numbers
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The sum of the values.
    - token: TAN
      file_name: math/tan.go
      line_number: 14
      doc:
        desc: TAN returns the tangent of a given number.
        params:
        - name: number
          type:
          - Int
          - Float
          desc: A number.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The tangent.
    - token: VARIANCE_POPULATION
      file_name: math/variance_population.go
      line_number: 14
      doc:
        desc: VARIANCE_POPULATION returns the population variance of the values in
          a given array.
        params:
        - name: numbers
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The population variance.
    - token: VARIANCE_SAMPLE
      file_name: math/variance_sample.go
      line_number: 14
      doc:
        desc: VARIANCE_SAMPLE returns the sample variance of the values in a given
          array.
        params:
        - name: numbers
          type:
          - Int[]
          - Float[]
          desc: Array of numbers.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: The sample variance.
  objects:
    name: objects
    functions:
    - token: HAS
      file_name: objects/has.go
      line_number: 13
      doc:
        desc: HAS returns the value stored by the given key.
        params:
        - name: key
          type:
          - String
          desc: The key name string.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: True if the key exists else false.
    - token: KEEP_KEYS
      file_name: objects/keep_keys.go
      line_number: 14
      doc:
        desc: KEEP_KEYS returns a new object with only given keys.
        params:
        - name: obj
          type:
          - Object
          desc: Source object.
          optional: false
          default_value:
        - name: keys
          type:
          - String, repeated
          desc: Keys that need to be kept.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: New object with only given keys.
    - token: KEYS
      file_name: objects/keys.go
      line_number: 15
      doc:
        desc: KEYS returns string array of object's keys
        params:
        - name: obj
          type:
          - Object
          desc: The object whose keys you want to extract
          optional: false
          default_value:
        - name: sort
          type:
          - Boolean
          desc: If sort is true, then the returned keys will be sorted.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - String[]
          desc: Array that contains object keys.
    - token: MERGE
      file_name: objects/merge.go
      line_number: 13
      doc:
        desc: MERGE merge the given objects into a single object.
        params:
        - name: objects
          type:
          - Object, repeated
          desc: Objects to merge.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: Object created by merging.
    - token: MERGE_RECURSIVE
      file_name: objects/merge_recursive.go
      line_number: 13
      doc:
        desc: MERGE_RECURSIVE recursively merge the given objects into a single object.
        params:
        - name: objects
          type:
          - Objects, repeated
          desc: Objects to merge.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: Object created by merging.
    - token: VALUES
      file_name: objects/values.go
      line_number: 13
      doc:
        desc: VALUES return the attribute values of the object as an array.
        params:
        - name: object
          type:
          - Object
          desc: Target object.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: Values of document returned in any order.
    - token: ZIP
      file_name: objects/zip.go
      line_number: 16
      doc:
        desc: ZIP returns an object assembled from the separate parameters keys and
          values. Keys and values must be arrays and have the same length.
        params:
        - name: keys
          type:
          - String[]
          desc: An array of strings, to be used as key names in the result.
          optional: false
          default_value:
        - name: values
          type:
          - Object[]
          desc: An array of core.value, to be used as key values.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Object
          desc: An object with the keys and values assembled.
  path:
    name: path
    functions:
    - token: BASE
      file_name: path/base.go
      line_number: 14
      doc:
        desc: BASE returns the last component of the path or the path itself if it
          does not contain any directory separators.
        params:
        - name: path
          type:
          - String
          desc: The path.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The last component of the path.
    - token: CLEAN
      file_name: path/clean.go
      line_number: 14
      doc:
        desc: CLEAN returns the shortest path name equivalent to path.
        params:
        - name: path
          type:
          - String
          desc: The path.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The shortest path name equivalent to path
    - token: DIR
      file_name: path/dir.go
      line_number: 14
      doc:
        desc: DIR returns the directory component of path.
        params:
        - name: path
          type:
          - String
          desc: The path.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The directory component of path.
    - token: EXT
      file_name: path/ext.go
      line_number: 14
      doc:
        desc: EXT returns the extension of the last component of path.
        params:
        - name: path
          type:
          - String
          desc: The path.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The extension of the last component of path.
    - token: IS_ABS
      file_name: path/is_abs.go
      line_number: 14
      doc:
        desc: IS_ABS reports whether the path is absolute.
        params:
        - name: path
          type:
          - String
          desc: The path.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: True if the path is absolute.
    - token: JOIN
      file_name: path/join.go
      line_number: 14
      doc:
        desc: JOIN joins any number of path elements into a single path, separating
          them with slashes.
        params:
        - name: elements
          type:
          - String, repeated
          - String[]
          desc: The path elements
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Single path from the given elements.
    - token: MATCH
      file_name: path/match.go
      line_number: 15
      doc:
        desc: MATCH reports whether name matches the pattern.
        params:
        - name: pattern
          type:
          - String
          desc: The pattern.
          optional: false
          default_value:
        - name: name
          type:
          - String
          desc: The name.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: True if the name matches the pattern.
    - token: SEPARATE
      file_name: path/separate.go
      line_number: 14
      doc:
        desc: SEPARATE separates the path into a directory and filename component.
        params:
        - name: path
          type:
          - String
          desc: The path
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: First item is a directory component, and second is a filename component.
  strings:
    name: strings
    functions:
    - token: CONCAT
      file_name: strings/concat.go
      line_number: 13
      doc:
        desc: CONCAT concatenates one or more instances of String, or an Array.
        params:
        - name: src
          type:
          - String, repeated
          - String[]
          desc: The source string / array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: A string value.
    - token: CONCAT_SEPARATOR
      file_name: strings/concat.go
      line_number: 47
      doc:
        desc: CONCAT_SEPARATOR concatenates one or more instances of String, or an
          Array with a given separator.
        params:
        - name: separator
          type:
          - String
          desc: The separator string.
          optional: false
          default_value:
        - name: src
          type:
          - String, repeated
          - String[]
          desc: The source string / array.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Concatenated string.
    - token: CONTAINS
      file_name: strings/contains.go
      line_number: 15
      doc:
        desc: CONTAINS returns a value indicating whether a specified substring occurs
          within a string.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: search
          type:
          - String
          desc: The string to seek.
          optional: false
          default_value:
        - name: returnIndex
          type:
          - Boolean
          desc: Values which indicates whether to return the character position of
            the match is returned instead of a boolean.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Boolean
          - Int
          desc: A value indicating whether a specified substring occurs within a string.
    - token: DECODE_URI_COMPONENT
      file_name: strings/decode.go
      line_number: 36
      doc:
        desc: DECODE_URI_COMPONENT returns the decoded String of uri.
        params:
        - name: uri
          type:
          - String
          desc: Uri to decode.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Decoded string.
    - token: ENCODE_URI_COMPONENT
      file_name: strings/encode.go
      line_number: 17
      doc:
        desc: ENCODE_URI_COMPONENT returns the encoded String of uri.
        params:
        - name: uri
          type:
          - String
          desc: Uri to encode.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Encoded string.
    - token: ESCAPE_HTML
      file_name: strings/escape.go
      line_number: 16
      doc:
        desc: "ESCAPE_HTML escapes special characters like \"<\" to become \"&lt;\"\
          . It escapes only five such characters: <, >, &, ' and \". UnescapeString(EscapeString(s))\
          \ == s always holds, but the converse isn't always true."
        params:
        - name: uri
          type:
          - String
          desc: Uri to escape.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Escaped string.
    - token: FIND_FIRST
      file_name: strings/find.go
      line_number: 17
      doc:
        desc: FIND_FIRST returns the position of the first occurrence of the string
          search inside the string text. Positions start at 0.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: search
          type:
          - String
          desc: The string to seek.
          optional: false
          default_value:
        - name: start
          type:
          - Int
          desc: Limit the search to a subset of the text, beginning at start.
          optional: true
          default_value:
        - name: end
          type:
          - Int
          desc: Limit the search to a subset of the text, ending at end
          optional: true
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The character position of the match. if search is not contained in
            text, -1 is returned. if search is empty, start is returned.
    - token: FIND_LAST
      file_name: strings/find.go
      line_number: 63
      doc:
        desc: FIND_LAST returns the position of the last occurrence of the string
          search inside the string text. Positions start at 0.
        params:
        - name: src
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: search
          type:
          - String
          desc: The string to seek.
          optional: false
          default_value:
        - name: start
          type:
          - Int
          desc: Limit the search to a subset of the text, beginning at start.
          optional: true
          default_value:
        - name: end
          type:
          - Int
          desc: Limit the search to a subset of the text, ending at end
          optional: true
          default_value:
        returns:
          name:
          type:
          - Int
          desc: The character position of the match. if search is not contained in
            text, -1 is returned. if search is empty, start is returned.
    - token: FMT
      file_name: strings/fmt.go
      line_number: 18
      doc:
        desc: FMT formats the template using these arguments.
        params:
        - name: template
          type:
          - String
          desc: Template.
          optional: false
          default_value:
        - name: args
          type:
          - Any, repeated
          desc: Template arguments.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: String formed by template using arguments.
    - token: FROM_BASE64
      file_name: strings/decode.go
      line_number: 16
      doc:
        desc: FROM_BASE64 returns the value of a base64 representation.
        params:
        - name: str
          type:
          - String
          desc: The string to decode.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The decoded string.
    - token: JSON_PARSE
      file_name: strings/json.go
      line_number: 13
      doc:
        desc: JSON_PARSE returns a value described by the JSON-encoded input string.
        params:
        - name: str
          type:
          - String
          desc: The string to parse as json.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any
          desc: Parsed value.
    - token: JSON_STRINGIFY
      file_name: strings/json.go
      line_number: 34
      doc:
        desc: JSON_STRINGIFY returns a JSON string representation of the input value.
        params:
        - name: str
          type:
          - Any
          desc: The input value to serialize.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Json string.
    - token: LEFT
      file_name: strings/substr.go
      line_number: 61
      doc:
        desc: LEFT returns the leftmost characters of the string value by index.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: length
          type:
          - Int
          desc: The amount of characters to return.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The leftmost characters of the string value by index.
    - token: LIKE
      file_name: strings/like.go
      line_number: 15
      doc:
        desc: LIKE checks whether the pattern search is contained in the string text,
          using wildcard matching.
        params:
        - name: str
          type:
          - String
          desc: The string to search in.
          optional: false
          default_value:
        - name: search
          type:
          - String
          desc: A search pattern that can contain the wildcard characters.
          optional: false
          default_value:
        - name: caseInsensitive - If set to true, the matching will be case
          type:
          - Boolean
          desc: Insensitive. the default is false.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if the pattern is contained in text, and false otherwise.
    - token: LOWER
      file_name: strings/case.go
      line_number: 13
      doc:
        desc: LOWER converts strings to their lower-case counterparts. All other characters
          are returned unchanged.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: This string in lower case.
    - token: LTRIM
      file_name: strings/trim.go
      line_number: 34
      doc:
        desc: LTRIM returns the string value with whitespace stripped from the start
          only.
        params:
        - name: str
          type:
          - String
          desc: The string.
          optional: false
          default_value:
        - name: chars
          type:
          - String
          desc: Overrides the characters that should be removed from the string. it
            defaults to \r\n \t.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The string without chars at the left-hand side.
    - token: MD5
      file_name: strings/encode.go
      line_number: 32
      doc:
        desc: MD5 calculates the MD5 checksum for text and return it in a hexadecimal
          string representation.
        params:
        - name: str
          type:
          - String
          desc: The string to do calculations against to.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Md5 checksum as hex string.
    - token: RANDOM_TOKEN
      file_name: strings/random.go
      line_number: 26
      doc:
        desc: RANDOM_TOKEN generates a pseudo-random token string with the specified
          length. The algorithm for token generation should be treated as opaque.
        params:
        - name: len
          type:
          - Int
          desc: The desired string length for the token. it must be greater than 0
            and at most 65536.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: A generated token consisting of lowercase letters, uppercase letters
            and numbers.
    - token: REGEX_MATCH
      file_name: strings/regex.go
      line_number: 16
      doc:
        desc: REGEX_MATCH returns the matches in the given string text, using the
          regex.
        params:
        - name: str
          type:
          - String
          desc: The string to search in.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: A regular expression to use for matching the text.
          optional: false
          default_value:
        - name: caseInsensitive - If set to true, the matching will be case
          type:
          - Boolean
          desc: Insensitive. the default is false.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: An array of strings containing the matches.
    - token: REGEX_REPLACE
      file_name: strings/regex.go
      line_number: 133
      doc:
        desc: REGEX_REPLACE replace every substring matched with the regexp with a
          given string.
        params:
        - name: str
          type:
          - String
          desc: The string to split.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: A regular expression search pattern.
          optional: false
          default_value:
        - name: replacement
          type:
          - String
          desc: The string to replace the search pattern with
          optional: false
          default_value:
        - name: caseInsensitive
          type:
          - Boolean
          desc: Insensitive.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - String
          desc: Returns the string text with the search regex pattern replaced with
            the replacement string wherever the pattern exists in text
    - token: REGEX_SPLIT
      file_name: strings/regex.go
      line_number: 58
      doc:
        desc: REGEX_SPLIT splits the given string text into a list of strings, using
          the separator.
        params:
        - name: str
          type:
          - String
          desc: The string to split.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: A regular expression to use for splitting the text.
          optional: false
          default_value:
        - name: caseInsensitive - If set to true, the matching will be case
          type:
          - Boolean
          desc: Insensitive. the default is false.
          optional: false
          default_value:
        - name: limit
          type:
          - Int
          desc: Limit the number of split values in the result. if no limit is given,
            the number of splits returned is not bounded.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: An array of strings splitted by the expression.
    - token: REGEX_TEST
      file_name: strings/regex.go
      line_number: 100
      doc:
        desc: REGEX_TEST test whether the regexp has at least one match in the given
          text.
        params:
        - name: str
          type:
          - String
          desc: The string to test.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: A regular expression to use for splitting the text.
          optional: false
          default_value:
        - name: caseInsensitive
          type:
          - Boolean
          desc: Insensitive.
          optional: true
          default_value: 'False'
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if the pattern is contained in text, and false otherwise.
    - token: RIGHT
      file_name: strings/substr.go
      line_number: 88
      doc:
        desc: RIGHT returns the rightmost characters of the string value.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: length
          type:
          - Int
          desc: The amount of characters to return.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The rightmost characters of the string value.
    - token: RTRIM
      file_name: strings/trim.go
      line_number: 55
      doc:
        desc: RTRIM returns the string value with whitespace stripped from the end
          only.
        params:
        - name: str
          type:
          - String
          desc: The string.
          optional: false
          default_value:
        - name: chars
          type:
          - String
          desc: Overrides the characters that should be removed from the string. it
            defaults to \r\n \t.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The string without chars at the right-hand side.
    - token: SHA1
      file_name: strings/encode.go
      line_number: 48
      doc:
        desc: SHA1 calculates the SHA1 checksum for text and returns it in a hexadecimal
          string representation.
        params:
        - name: str
          type:
          - String
          desc: The string to do calculations against to.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Sha1 checksum as hex string.
    - token: SHA512
      file_name: strings/encode.go
      line_number: 64
      doc:
        desc: SHA512 calculates the SHA512 checksum for text and returns it in a hexadecimal
          string representation.
        params:
        - name: str
          type:
          - String
          desc: The string to do calculations against to.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Sha512 checksum as hex string.
    - token: SPLIT
      file_name: strings/split.go
      line_number: 16
      doc:
        desc: SPLIT splits the given string value into a list of strings, using the
          separator.
        params:
        - name: str
          type:
          - String
          desc: The string to split.
          optional: false
          default_value:
        - name: separator
          type:
          - String
          desc: The separator.
          optional: false
          default_value:
        - name: limit
          type:
          - Int
          desc: Limit the number of split values in the result. if no limit is given,
            the number of splits returned is not bounded.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String[]
          desc: Array of strings.
    - token: SUBSTITUTE
      file_name: strings/substitute.go
      line_number: 17
      doc:
        desc: SUBSTITUTE replaces search values in the string value.
        params:
        - name: str
          type:
          - String
          desc: The string to modify
          optional: false
          default_value:
        - name: search
          type:
          - String
          desc: The string representing a search pattern
          optional: false
          default_value:
        - name: replace
          type:
          - String
          desc: The string representing a replace value
          optional: false
          default_value:
        - name: limit
          type:
          - Int
          desc: The cap the number of replacements to this value.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Returns a string with replace substring.
    - token: SUBSTRING
      file_name: strings/substr.go
      line_number: 15
      doc:
        desc: SUBSTRING returns a substring of value.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        - name: offset
          type:
          - Int
          desc: Start at offset, offsets start at position 0.
          optional: false
          default_value:
        - name: length
          type:
          - Int
          desc: At most length characters, omit to get the substring from offset to
            the end of the string.
          optional: true
          default_value:
        returns:
          name:
          type:
          - String
          desc: A substring of value.
    - token: TO_BASE64
      file_name: strings/encode.go
      line_number: 80
      doc:
        desc: TO_BASE64 returns the base64 representation of value.
        params:
        - name: str
          type:
          - String
          desc: The string to encode.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: A base64 representation of the string.
    - token: TRIM
      file_name: strings/trim.go
      line_number: 14
      doc:
        desc: TRIM returns the string value with whitespace stripped from the start
          and/or end.
        params:
        - name: str
          type:
          - String
          desc: The string.
          optional: false
          default_value:
        - name: chars
          type:
          - String
          desc: Overrides the characters that should be removed from the string. it
            defaults to \r\n \t.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: The string without chars on both sides.
    - token: UNESCAPE_HTML
      file_name: strings/unescape.go
      line_number: 17
      doc:
        desc: UNESCAPE_HTML unescapes entities like "&lt;" to become "<". It unescapes
          a larger range of entities than EscapeString escapes. For example, "&aacute;"
          unescapes to "á", as does "&#225;" and "&#xE1;". UnescapeString(EscapeString(s))
          == s always holds, but the converse isn't always true.
        params:
        - name: uri
          type:
          - String
          desc: Uri to escape.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: Escaped string.
    - token: UPPER
      file_name: strings/case.go
      line_number: 28
      doc:
        desc: UPPER converts strings to their upper-case counterparts. All other characters
          are returned unchanged.
        params:
        - name: str
          type:
          - String
          desc: The source string.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: This string in upper case.
  testing:
    name: testing
    functions:
    - token: Array
      file_name: testing/array.go
      line_number: 13
      doc:
        desc: ARRAY asserts that value is a array type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Binary
      file_name: testing/binary.go
      line_number: 13
      doc:
        desc: BINARY asserts that value is a binary type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: DateTime
      file_name: testing/datetime.go
      line_number: 13
      doc:
        desc: DATETIME asserts that value is a datetime type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Empty
      file_name: testing/empty.go
      line_number: 14
      doc:
        desc: EMPTY asserts that the target does not contain any values.
        params:
        - name: actual
          type:
          - Measurable
          - Binary
          - Object
          - Any[]
          - String
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Equal
      file_name: testing/equal.go
      line_number: 14
      doc:
        desc: EQUAL asserts equality of actual and expected values.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Fail
      file_name: testing/fail.go
      line_number: 11
      doc:
        desc: FAIL returns an error.
        params:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: 'False'
      file_name: testing/false.go
      line_number: 14
      doc:
        desc: FALSE asserts that value is false.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Float
      file_name: testing/float.go
      line_number: 13
      doc:
        desc: FLOAT asserts that value is a float type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Gt
      file_name: testing/gt.go
      line_number: 14
      doc:
        desc: GT asserts that an actual value is greater than an expected one.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Gte
      file_name: testing/gte.go
      line_number: 14
      doc:
        desc: GTE asserts that an actual value is greater than or equal to an expected
          one.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Include
      file_name: testing/include.go
      line_number: 16
      doc:
        desc: INCLUDE asserts that haystack includes needle.
        params:
        - name: actual
          type:
          - String
          - Array
          - Object
          - Iterable
          desc: Haystack value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Int
      file_name: testing/int.go
      line_number: 13
      doc:
        desc: INT asserts that value is a int type.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Len
      file_name: testing/len.go
      line_number: 15
      doc:
        desc: LEN asserts that a measurable value has a length or size with the expected
          value.
        params:
        - name: actual
          type:
          - Measurable
          desc: Measurable value.
          optional: false
          default_value:
        - name: length
          type:
          - Int
          desc: Target length.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Lt
      file_name: testing/lt.go
      line_number: 14
      doc:
        desc: LT asserts that an actual value is lesser than an expected one.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Lte
      file_name: testing/lte.go
      line_number: 14
      doc:
        desc: LTE asserts that an actual value is lesser than or equal to an expected
          one.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expected
          type:
          - Any
          desc: Expected value.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: MATCH
      file_name: testing/match.go
      line_number: 15
      doc:
        desc: MATCH asserts that value matches the regular expression.
        params:
        - name: actual
          type:
          - Any
          desc: Actual value.
          optional: false
          default_value:
        - name: expression
          type:
          - String
          desc: Regular expression.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: None
      file_name: testing/none.go
      line_number: 14
      doc:
        desc: NONE asserts that value is none.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: Object
      file_name: testing/object.go
      line_number: 13
      doc:
        desc: OBJECT asserts that value is a object type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: String
      file_name: testing/string.go
      line_number: 13
      doc:
        desc: STRING asserts that value is a string type.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
    - token: 'True'
      file_name: testing/true.go
      line_number: 14
      doc:
        desc: TRUE asserts that value is true.
        params:
        - name: actual
          type:
          - Any
          desc: Value to test.
          optional: false
          default_value:
        - name: message
          type:
          - String
          desc: Message to display on error.
          optional: true
          default_value:
        returns:
  types:
    name: types
    functions:
    - token: IS_ARRAY
      file_name: types/is_array.go
      line_number: 13
      doc:
        desc: IS_ARRAY checks whether value is an array value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is array, otherwise false.
    - token: IS_BINARY
      file_name: types/is_binary.go
      line_number: 13
      doc:
        desc: IS_BINARY checks whether value is a binary value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is binary, otherwise false.
    - token: IS_BOOL
      file_name: types/is_boolean.go
      line_number: 13
      doc:
        desc: IS_BOOL checks whether value is a boolean value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is boolean, otherwise false.
    - token: IS_DATETIME
      file_name: types/is_date_time.go
      line_number: 13
      doc:
        desc: IS_DATETIME checks whether value is a date time value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is date time, otherwise false.
    - token: IS_FLOAT
      file_name: types/is_float.go
      line_number: 13
      doc:
        desc: IS_FLOAT checks whether value is a float value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is float, otherwise false.
    - token: IS_HTML_DOCUMENT
      file_name: types/is_html_document.go
      line_number: 13
      doc:
        desc: IS_HTML_DOCUMENT checks whether value is a HTMLDocument value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is htmldocument, otherwise false.
    - token: IS_HTML_ELEMENT
      file_name: types/is_html_element.go
      line_number: 13
      doc:
        desc: IS_HTML_ELEMENT checks whether value is a HTMLElement value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is htmlelement, otherwise false.
    - token: IS_INT
      file_name: types/is_int.go
      line_number: 13
      doc:
        desc: IS_INT checks whether value is a int value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is int, otherwise false.
    - token: IS_NAN
      file_name: types/is_nan.go
      line_number: 13
      doc:
        desc: IS_NAN checks whether value is NaN.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is nan, otherwise false.
    - token: IS_NONE
      file_name: types/is_none.go
      line_number: 13
      doc:
        desc: IS_NONE checks whether value is a none value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is none, otherwise false.
    - token: IS_OBJECT
      file_name: types/is_object.go
      line_number: 13
      doc:
        desc: IS_OBJECT checks whether value is an object value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is object, otherwise false.
    - token: IS_STRING
      file_name: types/is_string.go
      line_number: 13
      doc:
        desc: IS_STRING checks whether value is a string value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns true if value is string, otherwise false.
    - token: TO_ARRAY
      file_name: types/to_array.go
      line_number: 15
      doc:
        desc: TO_ARRAY takes an input value of any type and convert it into an array
          value. None is converted to an empty array Boolean values, numbers and strings
          are converted to an array containing the original value as its single element
          Arrays keep their original value Objects / HTML nodes are converted to an
          array containing their attribute values as array elements.
        params:
        - name: input
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Any[]
          desc: An array value.
    - token: TO_BOOL
      file_name: types/to_boolean.go
      line_number: 18
      doc:
        desc: TO_BOOL takes an input value of any type and converts it into the appropriate
          boolean value. None is converted to false Numbers are converted to true,
          except for 0, which is converted to false Strings are converted to true
          if they are non-empty, and to false otherwise Dates are converted to true
          if they are not zero, and to false otherwise Arrays are always converted
          to true (even if empty) Objects / HtmlNodes / Binary are always converted
          to true
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: The appropriate boolean value.
    - token: TO_DATETIME
      file_name: types/to_date_time.go
      line_number: 12
      doc:
        desc: TO_DATETIME takes an input value of any type and converts it into the
          appropriate date time value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - DateTime
          desc: Parsed date time.
    - token: TO_FLOAT
      file_name: types/to_float.go
      line_number: 20
      doc:
        desc: TO_FLOAT takes an input value of any type and convert it into a float
          value. None and false are converted to the value 0 true is converted to
          1 Numbers keep their original value Strings are converted to their numeric
          equivalent if the string contains a valid representation of a number. String
          values that do not contain any valid representation of a number will be
          converted to the number 0. An empty array is converted to 0, an array with
          one member is converted into the result of TO_NUMBER() for its sole member.
          An array with two or more members is converted to the number 0. An object
          / HTML node is converted to the number 0.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Float
          desc: A float value.
    - token: TO_INT
      file_name: types/to_int.go
      line_number: 20
      doc:
        desc: TO_INT takes an input value of any type and convert it into an integer
          value. None and false are converted to the value 0 true is converted to
          1 Numbers keep their original value Strings are converted to their numeric
          equivalent if the string contains a valid representation of a number. String
          values that do not contain any valid representation of a number will be
          converted to the number 0. An empty array is converted to 0, an array with
          one member is converted into the result of TO_NUMBER() for its sole member.
          An array with two or more members is converted to the number 0. An object
          / HTML node is converted to the number 0.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Int
          desc: An integer value.
    - token: TO_STRING
      file_name: types/to_string.go
      line_number: 12
      doc:
        desc: TO_STRING takes an input value of any type and convert it into a string
          value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - String
          desc: String representation of a given value.
    - token: TYPENAME
      file_name: types/type_name.go
      line_number: 12
      doc:
        desc: TYPENAME returns the data type name of value.
        params:
        - name: value
          type:
          - Any
          desc: Input value of arbitrary type.
          optional: false
          default_value:
        returns:
          name:
          type:
          - Boolean
          desc: Returns string representation of a type.
  utils:
    name: utils
    functions:
    - token: PRINT
      file_name: utils/log.go
      line_number: 12
      doc:
        desc: PRINT writes messages into the system log.
        params:
        - name: message
          type:
          - Value, repeated
          desc: Print message.
          optional: false
          default_value:
        returns:
    - token: WAIT
      file_name: utils/wait.go
      line_number: 12
      doc:
        desc: WAIT pauses the execution for a given period.
        params:
        - name: timeout
          type:
          - Int
          - Float
          desc: Number value which indicates for how long to stop an execution.
          optional: false
          default_value:
        returns:
